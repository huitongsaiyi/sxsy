<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sayee.sxsy.modules.auditacceptance.dao.AuditAcceptanceDao">

	<sql id="auditAcceptanceColumns">
		if(a.audit_acceptance_id IS NULL,r.report_registration_id,a.audit_acceptance_id) AS "auditAcceptanceId",
		if(a.complaint_main_id IS NULL,r.complaint_main_id,a.complaint_main_id) AS "complaintMainId",
		if(a.summary_of_disputes IS NULL,r.summary_of_disputes,a.summary_of_disputes) AS "summaryOfDisputes",
		a.case_source AS "caseSource",
		a.guarantee_time AS "guaranteeTime",
		if(a.insurance_company IS NULL,o.insurance_company,a.insurance_company) AS "insuranceCompany",
		if(a.policy_number IS NULL,r.policy_number,a.policy_number)AS "policyNumber",
		a.diagnosis_mode AS "diagnosisMode",
		a.treatment_outcome AS "treatmentOutcome",
		a.handle_people AS "handlePeople",
		a.handle_time AS "handleTime",
		a.next_link AS "nextLink",
		a.next_link_man AS "nextLinkMan",
		a.create_by AS "createBy.id",
		if(a.create_by IS NULL,r.create_by,a.create_by) AS "createUser",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		b.case_number AS "complaintMain.caseNumber",
		b.patient_name AS "complaintMain.patientName",
		b.involve_hospital AS "complaintMain.involveHospital",
		b.proc_ins_id AS "complaintMain.procInsId",
		b.is_major AS "complaintMain.isMajor",
		o.name AS "complaintMain.hospital.name",
		o1.name AS "complaintMain.department.name",
		u1.name AS "complaintMain.employee.name",
		u2.name AS "linkEmployee.name",
		t.ID_ AS "complaintMain.act.taskId",
		m.mediate_apply_id AS "mediateApplyInfo.mediateApplyId",
		m.audit_acceptance_id AS "mediateApplyInfo.auditAcceptanceId",
		m.applyer AS "mediateApplyInfo.applyer",
		if(m.patient_relation IS NULL ,c1.patient_relation,m.patient_relation) AS "mediateApplyInfo.patientRelation",
		if(m.patient_name IS NULL ,b.patient_name,m.patient_name) AS "mediateApplyInfo.patientName",
		if(m.patient_sex IS NULL,b.patient_sex,m.patient_sex) AS "mediateApplyInfo.patientSex",
		if(m.patient_age IS NULL,b.patient_age,m.patient_age) AS "mediateApplyInfo.patientAge",
		if(m.patient_mobile IS NULL ,r.patient_mobile,m.patient_mobile) AS "mediateApplyInfo.patientMobile",
		m.involve_hospital AS "mediateApplyInfo.involveHospital",
		if(m.summary_of_disputes IS NULL OR m.summary_of_disputes ='',r.summary_of_disputes,m.summary_of_disputes) AS "mediateApplyInfo.summaryOfDisputes",
		m.apply_type AS "mediateApplyInfo.applyType",
		m.apply_matter AS "mediateApplyInfo.applyMatter",
		m2.mediate_apply_id AS "mediateApplyInfo.docMediateApplyInfo.mediateApplyId",
		if(m2.patient_name IS NULL ,b.patient_name,m2.patient_name) AS "mediateApplyInfo.docMediateApplyInfo.patientName",
		if(m2.patient_sex IS NULL ,b.patient_sex,m2.patient_sex) AS "mediateApplyInfo.docMediateApplyInfo.patientSex",
		if(m2.patient_age IS NULL,b.patient_age,m2.patient_age) AS "mediateApplyInfo.docMediateApplyInfo.patientAge",
		m2.apply_hospital AS "mediateApplyInfo.docMediateApplyInfo.applyHospital",
		m2.agent AS "mediateApplyInfo.docMediateApplyInfo.agent",
		if(m2.hospital_mobile IS NULL,r.doctor_mobile,m2.hospital_mobile) AS "mediateApplyInfo.docMediateApplyInfo.hospitalMobile",
		if(m2.summary_of_disputes IS NULL OR m2.summary_of_disputes = '',r.summary_of_disputes,m2.summary_of_disputes) AS "mediateApplyInfo.docMediateApplyInfo.summaryOfDisputes",
		m2.apply_matter AS "mediateApplyInfo.docMediateApplyInfo.applyMatter",
		m2.apply_type AS "mediateApplyInfo.docMediateApplyInfo.applyType",
		r.report_time AS "reportRegistration.reportTime",
		r.dispute_time AS "reportRegistration.disputeTime",
		r.is_major AS "reportRegistration.isMajor",
		r.summary_of_disputes AS "reportRegistration.summaryOfDisputes",
		m1.machine_account_id AS "machineAccount.machineAccountId",
		m1.complaint_main_id AS "machineAccount.complaintMainId",
		m1.reporting_time AS "machineAccount.reportingTime",
		m1.dept_id AS "machineAccount.deptId",
		m1.mediator_id AS "machineAccount.mediatorId",
		m1.patient_name AS "machineAccount.patientName",
		m1.hospital_id AS "machineAccount.hospitalId",
		m1.major AS "machineAccount.major",
		m1.insurance_company AS "machineAccount.insuranceCompany",
		m1.policy_number AS "machineAccount.policyNumber",
		m1.start_insurance_time AS "machineAccount.startInsuranceTime",
		m1.disputes_time AS "machineAccount.disputesTime",
		m1.risk_time AS "machineAccount.riskTime",
		m1.summary_of_disputes AS "machineAccount.summaryOfDisputes",
		m1.is_major AS "machineAccount.isMajor",
		m1.treatment_mode AS "machineAccount.treatmentMode",
		m1.treatment_result AS "machineAccount.treatmentResult",
		m1.patients_reflect_focus AS "machineAccount.patientsReflectFocus",
		m1.related_major AS "machineAccount.relatedMajor",
		m1.assess_time AS "machineAccount.assessTime",
		m1.assess_number AS "machineAccount.assessNumber",
		m1.duty_ratio AS "machineAccount.dutyRatio",
		m1.feedback_time AS "machineAccount.feedbackTime",
		m1.agreement_number AS "machineAccount.agreementNumber",
		m1.ratify_accord AS "machineAccount.ratifyAccord",
		m1.agreement_stamp_time AS "machineAccount.agreementStampTime",
		m1.agreement_amount AS "machineAccount.agreementAmount",
		m1.insurance_amount AS "machineAccount.insuranceAmount",
		m1.claim_settlement_time AS "machineAccount.claimSettlementTime",
		m1.compensate_time AS "machineAccount.compensateTime",
		m1.flow_days AS "machineAccount.flowDays",
		m1.hand_over AS "machineAccount.handOver",
		m1.archive_time AS "machineAccount.archiveTime",
		m1.file_number AS "machineAccount.fileNumber",
		m1.remark AS "machineAccount.remark",
		m1.create_by AS "machineAccount.createBy.id",
		m1.create_date AS "machineAccount.createDate",
		m1.update_by AS "machineAccount.updateBy.id",
		m1.update_date AS "machineAccount.updateDate",
		m1.del_flag AS "machineAccount.delFlag",
		oo.name AS"mediateApplyInfo.sjOffice.name",
		t.ASSIGNEE_ AS "complaintMain.act.assigneeName",
		oo1.name AS "mediateApplyInfo.docMediateApplyInfo.sqOffice.name"
	</sql>

	<sql id="auditAcceptanceJoins">
		LEFT JOIN AUDIT_ACCEPTANCE a ON a.complaint_main_id = b.complaint_main_id
		LEFT JOIN REPORT_REGISTRATION r ON r.complaint_main_id = b.complaint_main_id
		LEFT JOIN ACT_RU_TASK t on t.PROC_INST_ID_=b.PROC_INS_ID
		LEFT JOIN SYS_OFFICE o on o.id=b.involve_hospital
		LEFT JOIN SYS_OFFICE o1 ON o1.id=b.involve_department
		LEFT JOIN SYS_USER u1 ON u1.id=b.involve_employee
		LEFT JOIN SYS_USER u2 ON u2.id=a.next_link_man
		LEFT JOIN MEDIATE_APPLY_INFO m ON m.audit_acceptance_id = a.audit_acceptance_id AND m.apply_type = '1'
		LEFT JOIN MEDIATE_APPLY_INFO m2 ON m2.audit_acceptance_id = a.audit_acceptance_id AND m2.apply_type = '2'
		LEFT JOIN COMPLAINT_MAIN_DETAIL c1 ON c1.complaint_main_id = b.complaint_main_id
		LEFT JOIN SYS_OFFICE oo on oo.id = m.involve_hospital
		LEFT JOIN SYS_OFFICE oo1 on oo1.id = m2.apply_hospital
		LEFT JOIN MACHINE_ACCOUNT m1 ON m1.complaint_main_id = a.complaint_main_id AND m1.del_flag=0
	</sql>

	<select id="get" resultType="AuditAcceptance">
		SELECT
			<include refid="auditAcceptanceColumns"/>
		FROM COMPLAINT_MAIN b
		<include refid="auditAcceptanceJoins"/>
		WHERE a.audit_acceptance_id = #{auditAcceptanceId} OR r.report_registration_id = #{auditAcceptanceId}
	</select>

	<select id="findList" resultType="AuditAcceptance">
		SELECT
		ci.COMPLAINT_ID as "ComplaintMain.complaintId",
			<include refid="auditAcceptanceColumns"/>
		FROM COMPLAINT_MAIN b
		<include refid="auditAcceptanceJoins"/>
		LEFT JOIN COMPLAINT_INFO ci ON b.COMPLAINT_MAIN_ID = ci.COMPLAINT_MAIN_ID
		<where>
			if(a.del_flag IS NOT NULL,a.del_flag = #{DEL_FLAG_NORMAL},r.del_flag = #{DEL_FLAG_NORMAL})  AND b.PROC_INS_ID is NOT null and t.TASK_DEF_KEY_='check'
			<if test="user != null and user.id != null and user.id != ''">
				AND t.ASSIGNEE_ LIKE CONCAT('%', #{user.loginName}, '%')
			</if>
			<if test="list != null and list != ''">
				AND t.ASSIGNEE_ in
				<foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
			<if test="beginGuaranteeTime != null and endGuaranteeTime != null and beginGuaranteeTime != '' and endGuaranteeTime != ''">
				AND a.guarantee_time BETWEEN #{beginGuaranteeTime} AND #{endGuaranteeTime}
			</if>
			<if test="insuranceCompany != null and insuranceCompany != ''">
				AND a.insurance_company LIKE
					<if test="dbName == 'oracle'">'%'||#{insuranceCompany}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{insuranceCompany}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{insuranceCompany},'%')</if>
			</if>
			<if test="reportRegistration != null and reportRegistration.reportTime != null and reportRegistration.reportTime !=''">
				AND r.report_time LIKE CONCAT('%', #{reportRegistration.reportTime}, '%')
			</if>
			<if test="complaintMain !=null and complaintMain.patientName != null and complaintMain.patientName != ''">
				AND b.patient_name LIKE CONCAT('%', #{complaintMain.patientName}, '%')
			</if>
			<if test="complaintMain !=null and complaintMain.caseNumber != null and complaintMain.caseNumber != ''">
				AND b.case_number LIKE CONCAT('%', #{complaintMain.caseNumber}, '%')
			</if>
			<if test="complaintMain !=null and complaintMain.involveHospital != null and complaintMain.involveHospital != ''">
				AND b.involve_hospital LIKE CONCAT('%', #{complaintMain.involveHospital}, '%')
			</if>


		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="AuditAcceptance">
		SELECT
			<include refid="auditAcceptanceColumns"/>
		FROM AUDIT_ACCEPTANCE a
		<include refid="auditAcceptanceJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO AUDIT_ACCEPTANCE(
			audit_acceptance_id,
			complaint_main_id,
			summary_of_disputes,
			case_source,
			guarantee_time,
			insurance_company,
			policy_number,
			diagnosis_mode,
			treatment_outcome,
			handle_people,
			handle_time,
			next_link,
			next_link_man,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{auditAcceptanceId},
			#{complaintMainId},
			#{summaryOfDisputes},
			#{caseSource},
			#{guaranteeTime},
			#{insuranceCompany},
			#{policyNumber},
			#{diagnosisMode},
			#{treatmentOutcome},
			#{handlePeople},
			#{handleTime},
			#{nextLink},
			#{nextLinkMan},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>

	<update id="update">
		UPDATE AUDIT_ACCEPTANCE SET
			audit_acceptance_id = #{auditAcceptanceId},
			complaint_main_id = #{complaintMainId},
			case_source = #{caseSource},
			guarantee_time = #{guaranteeTime},
			insurance_company = #{insuranceCompany},
			policy_number = #{policyNumber},
			diagnosis_mode = #{diagnosisMode},
			treatment_outcome = #{treatmentOutcome},
			summary_of_disputes = #{summaryOfDisputes},
			handle_people = #{handlePeople},
			handle_time = #{handleTime},
			next_link = #{nextLink},
			next_link_man = #{nextLinkMan},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE audit_acceptance_id = #{auditAcceptanceId}
	</update>

	<update id="delete">
		UPDATE AUDIT_ACCEPTANCE SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE audit_acceptance_id = #{auditAcceptanceId}
	</update>

</mapper>